name: CI/CD Send-messages
on:
  push:
    branches: 
      - 'main'
jobs:
  build-lint:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [19.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install

  create-package:
    if: ${{github.ref == 'refs/heads/main'}}
    needs: build-lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Docker latest tag
      run: |
        docker build . -t ghcr.io/ale4a/send-messages:develop
    - name: Push latest tag image
      run: |
        docker push ghcr.io/ale4a/send-messages:develop

  deploy:
    runs-on: ubuntu-latest
    needs: create-package
    if: ${{github.ref == 'refs/heads/main'}}
    steps:
      - name: Setup SSH connection
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEV_SSH_SECRET }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ vars.DEV_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Login to the GitHub Packages Docker Registry
        run: ssh ${{ vars.DEV_SSH_USERNAME }}@${{ vars.DEV_SSH_HOST }} "echo ${{ secrets.DOCKER_REGISTRY_TOKEN }} | docker login ghcr.io -u ${{ vars.DOCKER_REGISTRY_USER }}" --password-stdin

      - name: Run docker-compose
        continue-on-error: true
        run: ssh ${{ vars.DEV_SSH_USERNAME }}@${{ vars.DEV_SSH_HOST }} "cd send-messages && ./deploy.sh"

      - name: Delete unused images
        run: ssh ${{ vars.DEV_SSH_USERNAME }}@${{ vars.DEV_SSH_HOST }} "docker image prune -f"

      - name: Logout from the GitHub Packages Docker Registry
        run: ssh ${{ vars.DEV_SSH_USERNAME }}@${{ vars.DEV_SSH_HOST }} "docker logout ghcr.io"